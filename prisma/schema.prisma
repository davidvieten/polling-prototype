generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], map: "accounts_user_id_fkey")
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "sessions_user_id_fkey")
  @@map("sessions")
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime? @map("email_verified")
  image          String?
  hashedPassword String?
  isAdmin        Boolean   @default(false)
  school         String
  votes          Vote[]
  accounts       Account[]
  sessions       Session[]

  @@map("users")
}

model Player {
  id       String @id @default(cuid())
  name     String
  school   String
  position String
  votes    Vote[]
}

model Vote {
  id       String       @id @default(cuid())
  category VoteCategory
  userId   String
  playerId String?
  player   Player?      @relation(fields: [playerId], references: [id], onDelete: Cascade)
  user     User         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, category])
  @@index([playerId], map: "Vote_playerId_fkey")
}

enum VoteCategory {
  PLAYER_OF_THE_YEAR
  DEFENSEMAN_OF_THE_YEAR
  COACH_OF_THE_YEAR
  ALL_TEAM
}
